<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Panel - Claim Requests</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f7;
            margin: 0;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        h2 {
            margin-top: 20px;
        }

        table {
            width: 100%;
            max-width: 1200px;
            border-collapse: collapse;
            margin: 20px 0;
        }

        table th,
        table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        table th {
            background-color: #4CAF50;
            color: white;
        }

        table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        img {
            max-width: 100px;
            height: auto;
        }

        button {
            background-color: #ff4c4c;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
        }

        button:hover {
            background-color: #ff1a1a;
        }
    </style>
</head>

<body>

    <h2>Claim Requests</h2>

    <table>
        <thead>
            <tr>
                <th>Image</th>
                <th>Found Item ID</th>
                <th>Found Item Title</th>
                <th>Found Item Description</th>
                <th>Found Item Phone</th>
                <th>Claim Description</th>
                <th>Claimer's Phone</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="claim-requests">
            <!-- Rows will be dynamically inserted here -->
        </tbody>
    </table>

    <script>
        async function fetchClaimRequests() {
            try {
                const response = await fetch('/lf/admin-claim-requests');
                const itemsWithClaims = await response.json();

                const tableBody = document.getElementById('claim-requests');
                tableBody.innerHTML = '';

                itemsWithClaims.forEach(itemClaim => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>
                            <img src="/uploads/${itemClaim.foundItem.photo}" alt="${itemClaim.foundItem.title}">
                        </td>
                        <td>${itemClaim.foundItem._id}</td>
                        <td>${itemClaim.foundItem.title}</td>
                        <td>${itemClaim.foundItem.description}</td>
                        <td>${itemClaim.foundItem.phone}</td>
                        <td>${itemClaim.claim.description}</td>
                        <td>${itemClaim.claim.phone}</td>
                        <td>
                            <button onclick="deleteClaim('${itemClaim.claim._id}')">Delete Claim</button>
                            <button onclick="deleteAllClaims('${itemClaim.foundItem._id}')">Delete All Claims & Item</button>
                        </td>
                    `;
                    tableBody.appendChild(row);
                });
            } catch (error) {
                console.error('Error fetching claim requests:', error);
            }
        }

        async function deleteClaim(claimId) {
            if (confirm('Are you sure you want to delete this specific claim?')) {
                try {
                    const response = await fetch(`/lf/claim-item/${claimId}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Claim deleted successfully!');
                        fetchClaimRequests(); // Refresh the table after deletion
                    } else {
                        const result = await response.json();
                        alert('Error: ' + result.message);
                    }
                } catch (error) {
                    console.error('Error deleting claim:', error);
                    alert('Failed to delete claim. Please try again.');
                }
            }
        }

        async function deleteAllClaims(itemId) {
            if (confirm('Are you sure you want to delete the item and all related claims?')) {
                try {
                    const response = await fetch(`/lf/found-item/${itemId}`, {
                        method: 'DELETE'
                    });

                    if (response.ok) {
                        alert('Item and all associated claims deleted successfully!');
                        fetchClaimRequests(); // Refresh the table after deletion
                    } else {
                        // Check if the response is JSON or not
                        const contentType = response.headers.get('Content-Type');
                        if (contentType && contentType.includes('application/json')) {
                            const result = await response.json();
                            alert('Error: ' + result.message);
                        } else {
                            // Handle non-JSON responses (like HTML error pages)
                            alert('Error: Could not delete the item. Please check the server response.');
                        }
                    }
                } catch (error) {
                    console.error('Error deleting item and claims:', error);
                    alert('Failed to delete item and claims. Please try again.');
                }
            }
        }

        window.onload = fetchClaimRequests;
    </script>

</body>

</html>